import proguard.gradle.ProGuardTask

plugins {
    id 'java-library'
    id 'com.android.lint'
}

configurations {
    cp
}

dependencies {
    // lintVersion = gradlePluginVersion + 23.0.0
    // https://github.com/googlesamples/android-custom-lint-rules
    def lintVersion = '30.1.0'
    compileOnly "com.android.tools.lint:lint-api:$lintVersion"
    compileOnly "com.android.tools.lint:lint-checks:$lintVersion"

    def autoServiceVersion = '1.0.1'
    annotationProcessor "com.google.auto.service:auto-service:$autoServiceVersion"
    compileOnly "com.google.auto.service:auto-service-annotations:$autoServiceVersion"

    cp "com.google.auto.service:auto-service-annotations:$autoServiceVersion"
    cp "com.android.tools.lint:lint-api:$lintVersion"
}

lintOptions {
    htmlReport false
    xmlReport false
    textReport true
}

final def exportDepJarsPath = "$buildDir/depJars"

task copyDependencyJar(type: Copy) {
    from configurations.cp
    into exportDepJarsPath
}

task obfuscateJar(type: ProGuardTask, dependsOn: 'jar') {
    String sdkDir
    try {
        sdkDir = new PropertyResourceBundle(new FileReader("$rootDir/local.properties")).getString('sdk.dir')
    } catch (FileNotFoundException ignored) {
        sdkDir = System.getenv("ANDROID_SDK_ROOT")
    }
    def androidJar = "$sdkDir/platforms/android-${rootProject.ext.compileSdkVersion}/android.jar"
    libraryjars androidJar

    dependsOn 'copyDependencyJar'
    libraryjars exportDepJarsPath

    def libDir = "$buildDir/libs"
    def src = 'retoast-lint.jar'
    def obfuscated = 'obf.jar'
    def srcJar = "$libDir/$src"
    def outJar = "$libDir/$obfuscated"

    injars srcJar
    outjars outJar
    printmapping 'build/mapping.txt'
    configuration 'proguard-rules.pro'

    doLast {
        delete srcJar
        copy {
            from libDir
            include obfuscated
            into libDir
            rename obfuscated, src
        }
        delete outJar
    }
}

obfuscateJar.outputs.upToDateWhen { false }

afterEvaluate {
    jar.finalizedBy(obfuscateJar)
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}